@model FerryBookingMVC.Models.CarViewModel

@{
    ViewData["Title"] = "Create Car";
}

<h1>Create Car</h1>

<h4>Car</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div class="form-group">
                <label asp-for="RegistrationPlate" class="control-label"></label>
                <input asp-for="RegistrationPlate" class="form-control" pattern="[a-zA-Z0-9-]+" title="Invalid input: Only letters, numbers, and hyphens are allowed" />
                <span asp-validation-for="RegistrationPlate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NumberOfGuests" class="control-label"></label>
                <select asp-for="NumberOfGuests" class="form-control" onchange="updateGuestFields(this.value)">
                    <option value="">Select number of guests</option>
                    @for (int i = 1; i <= 5; i++)
                    {
                        <option value="@i">@i</option>
                    }
                </select>
                <span asp-validation-for="NumberOfGuests" class="text-danger"></span>
            </div>

            <div id="guest-fields">
          
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function updateGuestFields(numberOfGuests) {
            const container = document.getElementById('guest-fields');
            container.innerHTML = '';
            for (let i = 0; i < numberOfGuests; i++) {
                container.innerHTML += `
                            <div class="form-group">
                                <label for="Guests_${i}__Name">Name</label>
                                <input type="text" class="form-control" id="Guests_${i}__Name" name="Guests[${i}].Name" required pattern="[a-zA-Z]+" title="Name can only contain letters" />
                                <span class="text-danger field-validation-valid" data-valmsg-for="Guests[${i}].Name" data-valmsg-replace="true"></span>
                            </div>
                            <div class="form-group">
                                <label for="Guests_${i}__Age">Age</label>
                                <input type="number" class="form-control" id="Guests_${i}__Age" name="Guests[${i}].Age" required min="0" max="120" title="Please enter a valid age between 0 and 120" />
                                <span class="text-danger field-validation-valid" data-valmsg-for="Guests[${i}].Age" data-valmsg-replace="true"></span>
                            </div>
                            <div class="form-group">
                                <label for="Guests_${i}__Gender">Gender</label>
                                <select class="form-control" id="Guests_${i}__Gender" name="Guests[${i}].Gender" required>
                                    <option value="">Select Gender</option>
                                    <option value="Male">Male</option>
                                    <option value="Female">Female</option>
                                    <option value="Other">Other</option>
                                </select>
                                <span class="text-danger field-validation-valid" data-valmsg-for="Guests[${i}].Gender" data-valmsg-replace="true"></span>
                            </div>
                        `;
            }
        }
    </script>
}
