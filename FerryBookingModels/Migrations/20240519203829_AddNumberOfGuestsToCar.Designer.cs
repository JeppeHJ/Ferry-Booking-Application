// <auto-generated />
using System;
using FerryBookingModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FerryBookingModels.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240519203829_AddNumberOfGuestsToCar")]
    partial class AddNumberOfGuestsToCar
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FerryBookingModels.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FerryId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationPlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FerryId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("FerryBookingModels.Ferry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaxCars")
                        .HasColumnType("int");

                    b.Property<int>("MaxGuests")
                        .HasColumnType("int");

                    b.Property<double>("PricePerCar")
                        .HasColumnType("float");

                    b.Property<double>("PricePerGuest")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Ferries");
                });

            modelBuilder.Entity("FerryBookingModels.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<int?>("FerryId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("FerryId");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("FerryBookingModels.Car", b =>
                {
                    b.HasOne("FerryBookingModels.Ferry", null)
                        .WithMany("Cars")
                        .HasForeignKey("FerryId");
                });

            modelBuilder.Entity("FerryBookingModels.Guest", b =>
                {
                    b.HasOne("FerryBookingModels.Car", null)
                        .WithMany("Guests")
                        .HasForeignKey("CarId");

                    b.HasOne("FerryBookingModels.Ferry", null)
                        .WithMany("Guests")
                        .HasForeignKey("FerryId");
                });

            modelBuilder.Entity("FerryBookingModels.Car", b =>
                {
                    b.Navigation("Guests");
                });

            modelBuilder.Entity("FerryBookingModels.Ferry", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Guests");
                });
#pragma warning restore 612, 618
        }
    }
}
